(self.webpackChunk_nazeeh2000_comp_kit=self.webpackChunk_nazeeh2000_comp_kit||[]).push([[847],{"./package/src/components/ui/Button/Button.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{z:()=>Button});const Button=(0,__webpack_require__("./node_modules/.pnpm/@stitches+react@1.2.8_react@18.2.0/node_modules/@stitches/react/dist/index.mjs").zo)("button",{backgroundColor:"white",borderRadius:"6px",fontSize:"14px",padding:"10px 15px",width:"fit-content",cursor:"pointer",border:"none","&:hover":{backgroundColor:"#f5f5f5"},variants:{color:{dark:{backgroundColor:"#222122",color:"white","&:hover":{backgroundColor:"#1b1a1b"},"&:focus":{outline:"#1b1a1b solid 2px",outlineOffset:"1px"}},light:{backgroundColor:"#f9fdfe",color:"black","&:hover":{backgroundColor:"#f5f5f5"},"&:focus":{outline:"#f5f5f5 solid 2px",outlineOffset:"1px"}}}},defaultVariants:{color:"light"}});try{Button.displayName="Button",Button.__docgenInfo={description:"",displayName:"Button",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:'"dark" | "light" | ({ "@initial"?: "dark" | "light"; } & { [x: string]: "dark" | "light"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Button/Button.tsx#Button"]={docgenInfo:Button.__docgenInfo,name:"Button",path:"package/src/components/ui/Button/Button.tsx#Button"})}catch(__react_docgen_typescript_loader_error){}},"./package/src/components/ui/Modal/Modal.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{u:()=>Modal});__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");var dist=__webpack_require__("./node_modules/.pnpm/@stitches+react@1.2.8_react@18.2.0/node_modules/@stitches/react/dist/index.mjs");const Overlay=(0,dist.zo)("div",{position:"fixed",top:0,left:0,right:0,bottom:0,backgroundColor:"rgba(0, 0, 0, 0.5)",display:"flex",alignItems:"center",justifyContent:"center"}),ModalContainer=(0,dist.zo)("div",{backgroundColor:"#fff",padding:"0px",borderRadius:"4px",width:"35%",height:"fit-content",maxWidth:"50%",maxHeight:"50%",overflow:"auto","@media(max-width: 767px)":{width:"80%",minHeight:"20%",height:"fit-content",maxHeight:"80%"},display:"flex",flexDirection:"column",alignItems:"center",justifyContent:"center",gap:"0.1rem",paddingBottom:"0.75rem"}),CloseButton=(0,dist.zo)("button",{position:"relative",top:"0px",right:"2px",marginLeft:"auto",background:"none",border:"none",cursor:"pointer"});try{Overlay.displayName="Overlay",Overlay.__docgenInfo={description:"",displayName:"Overlay",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Modal/styles.tsx#Overlay"]={docgenInfo:Overlay.__docgenInfo,name:"Overlay",path:"package/src/components/ui/Modal/styles.tsx#Overlay"})}catch(__react_docgen_typescript_loader_error){}try{ModalContainer.displayName="ModalContainer",ModalContainer.__docgenInfo={description:"",displayName:"ModalContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Modal/styles.tsx#ModalContainer"]={docgenInfo:ModalContainer.__docgenInfo,name:"ModalContainer",path:"package/src/components/ui/Modal/styles.tsx#ModalContainer"})}catch(__react_docgen_typescript_loader_error){}try{CloseButton.displayName="CloseButton",CloseButton.__docgenInfo={description:"",displayName:"CloseButton",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Modal/styles.tsx#CloseButton"]={docgenInfo:CloseButton.__docgenInfo,name:"CloseButton",path:"package/src/components/ui/Modal/styles.tsx#CloseButton"})}catch(__react_docgen_typescript_loader_error){}var x=__webpack_require__("./node_modules/.pnpm/lucide-react@0.233.0_react@18.2.0/node_modules/lucide-react/dist/esm/icons/x.js"),jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const Modal=({isOpen,onClose,closeOnOverlayClick=!1,children})=>isOpen?(0,jsx_runtime.jsx)(Overlay,{onClick:event=>{closeOnOverlayClick&&event.target===event.currentTarget&&onClose?.(event)},children:(0,jsx_runtime.jsxs)(ModalContainer,{children:[(0,jsx_runtime.jsx)(CloseButton,{onClick:onClose,children:(0,jsx_runtime.jsx)(x.Z,{})}),children]})}):null;Modal.displayName="Modal";try{Modal.displayName="Modal",Modal.__docgenInfo={description:"",displayName:"Modal",props:{isOpen:{defaultValue:null,description:"",name:"isOpen",required:!0,type:{name:"boolean"}},onClose:{defaultValue:null,description:"",name:"onClose",required:!0,type:{name:"MouseEventHandler<HTMLButtonElement> | undefined"}},closeOnOverlayClick:{defaultValue:{value:"false"},description:"",name:"closeOnOverlayClick",required:!1,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Modal/Modal.tsx#Modal"]={docgenInfo:Modal.__docgenInfo,name:"Modal",path:"package/src/components/ui/Modal/Modal.tsx#Modal"})}catch(__react_docgen_typescript_loader_error){}},"./package/src/index.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{NL:()=>ConnectButton,PW:()=>KitProvider,iZ:()=>SwitchNetworks});var react=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),esm=__webpack_require__("./node_modules/.pnpm/viem@0.3.39_bufferutil@4.0.7_typescript@5.0.4_utf-8-validate@6.0.3/node_modules/viem/dist/esm/index.js"),chains=__webpack_require__("./node_modules/.pnpm/viem@0.3.39_bufferutil@4.0.7_typescript@5.0.4_utf-8-validate@6.0.3/node_modules/viem/dist/esm/chains.js");function getChain(chainId){for(const chain of Object.values(chains)){if(chain.id===chainId)return chain;if(0===chainId)return chains.mainnet}throw new Error(`Chain with id ${chainId} not found`)}try{getChain.displayName="getChain",getChain.__docgenInfo={description:"Gets the chain object for the given chain id.",displayName:"getChain",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/utils/utils.tsx#getChain"]={docgenInfo:getChain.__docgenInfo,name:"getChain",path:"package/src/utils/utils.tsx#getChain"})}catch(__react_docgen_typescript_loader_error){}const useSwitchChain=()=>{const walletClient=useWalletClient(),publicClient=usePublicClient(),[switchingToChainId,setSwitchingToChainId]=(0,react.useState)(),isConnected=useIsConnected();(0,react.useEffect)((()=>{if(window?.ethereum)return window?.ethereum.on("chainChanged",(()=>{setSwitchingToChainId(null)})),()=>{window?.ethereum.removeListener("chainChanged",(()=>setSwitchingToChainId(null)))}}),[publicClient]);return{switchChain:async chainId=>{if(!isConnected)return!1;setSwitchingToChainId(chainId);try{return await(walletClient?.switchChain({id:chainId})),chainId}catch(error){if(4902==+error.cause.code){const chain=getChain(chainId);if(!chain)return!1;try{await(walletClient?.addChain({chain}))}catch(error){throw console.error("Error while adding chain",error),new Error(`Error while adding chain ${chainId}`)}}throw console.error("Error while switching chain",error),new Error(`Error while switching chain to ${chainId}`)}finally{setSwitchingToChainId(null)}},switchingToChainId}};var jsx_runtime=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js");const ChainContext=(0,react.createContext)({supportedChains:[],initialChain:void 0,currentChain:void 0}),ChainContextProvider=({supportedChains,initialChain,children})=>{const walletClient=useWalletClient(),[currentChain,setCurrentChain]=(0,react.useState)(),publicClient=usePublicClient(),{switchChain}=useSwitchChain();return(0,react.useEffect)((()=>{(async()=>{if("undefined"!=typeof window&&window.ethereum){const chainId=await window.ethereum.request({method:"eth_chainId"});console.log("chainId from users metamask: ",chainId),chainId&&setCurrentChain(getChain(+chainId))}})()}),[window?.ethereum]),(0,react.useEffect)((()=>{console.log("currentChain from chainContext: ",currentChain)}),[currentChain]),(0,react.useEffect)((()=>{if("undefined"!=typeof window&&window?.ethereum)window.ethereum.on("chainChanged",(chainId=>{console.log("detected chainChanged",chainId),setCurrentChain(getChain(+chainId))}));else{(async()=>{const block=await(publicClient?.[supportedChains[0].name]?.getChainId());setCurrentChain(getChain(block||1))})()}return()=>{window.ethereum.removeListener("chainChanged",(chainId=>{console.log("detected chainChanged",chainId),setCurrentChain(getChain(+chainId))}))}}),[window?.ethereum]),(0,react.useEffect)((()=>{initialChain&&switchChain(("number"==typeof initialChain?initialChain:initialChain?.id)??supportedChains[0].id)}),[initialChain,walletClient]),(0,jsx_runtime.jsx)(ChainContext.Provider,{value:(0,react.useMemo)((()=>({supportedChains,initialChain:"number"==typeof initialChain?initialChain:initialChain?.id,currentChain})),[supportedChains,initialChain,currentChain]),children})};ChainContextProvider.displayName="ChainContextProvider";const useSupportedChains=()=>(0,react.useContext)(ChainContext).supportedChains,useCurrentChain=()=>(0,react.useContext)(ChainContext).currentChain;try{ChainContextProvider.displayName="ChainContextProvider",ChainContextProvider.__docgenInfo={description:"",displayName:"ChainContextProvider",props:{supportedChains:{defaultValue:null,description:"",name:"supportedChains",required:!0,type:{name:"Chain[]"}},initialChain:{defaultValue:null,description:"",name:"initialChain",required:!1,type:{name:"number | Chain"}},currentChain:{defaultValue:null,description:"",name:"currentChain",required:!1,type:{name:"Chain"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/KitProvider/ChainContext.tsx#ChainContextProvider"]={docgenInfo:ChainContextProvider.__docgenInfo,name:"ChainContextProvider",path:"package/src/components/KitProvider/ChainContext.tsx#ChainContextProvider"})}catch(__react_docgen_typescript_loader_error){}const ClientContext=(0,react.createContext)({walletClient:void 0,publicClient:void 0,setWalletClient:()=>{}}),KitProvider=({supportedChains,initialChain,children})=>{const[walletClient,setWalletClient]=(0,react.useState)(),[publicClient,setPublicClient]=(0,react.useState)();return(0,react.useEffect)((()=>{const tempPublicClient={};[...supportedChains,initialChain&&initialChain].forEach((chain=>{const client=(0,esm.vvc)({chain:chain??chains.mainnet,transport:(0,esm.dJM)()});tempPublicClient[chain.name]=client})),setPublicClient(tempPublicClient)}),[]),(0,jsx_runtime.jsx)(ClientContext.Provider,{value:(0,react.useMemo)((()=>({walletClient,publicClient,setWalletClient})),[walletClient,publicClient]),children:(0,jsx_runtime.jsx)(ChainContextProvider,{supportedChains,initialChain,children:(0,jsx_runtime.jsx)(AddressContextProvider,{children})})})};KitProvider.displayName="KitProvider";const usePublicClient=()=>(0,react.useContext)(ClientContext).publicClient,useWalletClient=()=>(0,react.useContext)(ClientContext).walletClient,useSetWalletClient=()=>(0,react.useContext)(ClientContext).setWalletClient;try{KitProvider.displayName="KitProvider",KitProvider.__docgenInfo={description:"",displayName:"KitProvider",props:{supportedChains:{defaultValue:null,description:"",name:"supportedChains",required:!0,type:{name:"Chain[]"}},initialChain:{defaultValue:null,description:"",name:"initialChain",required:!0,type:{name:"Chain"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/KitProvider/KitProvider.tsx#KitProvider"]={docgenInfo:KitProvider.__docgenInfo,name:"KitProvider",path:"package/src/components/KitProvider/KitProvider.tsx#KitProvider"})}catch(__react_docgen_typescript_loader_error){}const AddressContext=(0,react.createContext)({address:void 0,setAddress:()=>{},connecting:!1,setConnecting:()=>{},error:void 0,setError:()=>{},status:"disconnected",walletProvider:void 0,setWalletProvider:()=>{},isConnected:!1,setConnected:()=>{},disconnectWallet:()=>{}}),AddressContextProvider=({children})=>{const[address,setAddress]=(0,react.useState)(),[connecting,setConnecting]=(0,react.useState)(!1),[isConnected,setConnected]=(0,react.useState)(!1),[error,setError]=(0,react.useState)(),[status,setStatus]=(0,react.useState)("disconnected"),[walletProvider,setWalletProvider]=(0,react.useState)(),walletClient=useWalletClient(),setWalletClient=useSetWalletClient(),disconnectWallet=(0,react.useCallback)((async()=>{await(walletClient?.request({method:"eth_requestAccounts",params:void 0})),setAddress(void 0),setWalletProvider(void 0),setWalletClient(void 0),setConnected(!1)}),[walletClient]);return(0,react.useEffect)((()=>("undefined"!=typeof window&&window?.ethereum&&window.ethereum.on("accountsChanged",(accounts=>{console.log("accountsChanges",accounts),accounts&&accounts.length>0&&(console.log("Setting address",accounts),setAddress(accounts))})),()=>{window.ethereum.removeListener("accountsChanged",(accounts=>{console.log("accountsChanges",accounts)}))})),[]),(0,react.useEffect)((()=>{(async()=>{const accounts=await(walletClient?.getAddresses());accounts&&accounts.length>0?(setAddress(accounts),console.log("Setting address",accounts)):setAddress(void 0)})()}),[walletClient]),(0,react.useEffect)((()=>{if("undefined"!=typeof window&&window?.ethereum){const walletClient=(0,esm.Kwp)({chain:chains.mainnet,transport:(0,esm.PGm)(window.ethereum)});setWalletClient(walletClient)}}),[window?.ethereum]),(0,react.useEffect)((()=>{connecting?setStatus("connecting"):address&&!error?(setStatus("connected"),setConnected(!0)):error?(setStatus("error"),setConnected(!1)):(setStatus("disconnected"),setConnected(!1))}),[connecting,address,error]),(0,jsx_runtime.jsx)(AddressContext.Provider,{value:(0,react.useMemo)((()=>({address,setAddress,connecting,setConnecting,error,setError,status,walletProvider,setWalletProvider,isConnected,setConnected,disconnectWallet})),[address,connecting,error,status,walletProvider,isConnected,setConnected,disconnectWallet]),children})};AddressContextProvider.displayName="AddressContextProvider";const useSetAddress=()=>(0,react.useContext)(AddressContext).setAddress,useSetWalletConnecting=()=>(0,react.useContext)(AddressContext).setConnecting,useSetConnectWalletError=()=>(0,react.useContext)(AddressContext).setError,useSetWalletProvider=()=>(0,react.useContext)(AddressContext).setWalletProvider,useIsConnected=()=>(0,react.useContext)(AddressContext).isConnected;try{AddressContextProvider.displayName="AddressContextProvider",AddressContextProvider.__docgenInfo={description:"",displayName:"AddressContextProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/KitProvider/AddressContext.tsx#AddressContextProvider"]={docgenInfo:AddressContextProvider.__docgenInfo,name:"AddressContextProvider",path:"package/src/components/KitProvider/AddressContext.tsx#AddressContextProvider"})}catch(__react_docgen_typescript_loader_error){}const useMetaMaskWallet=({onClose})=>{const setAddress=useSetAddress(),setConnecting=useSetWalletConnecting(),setError=useSetConnectWalletError(),setWalletProvider=useSetWalletProvider(),currentChain=useCurrentChain(),setWalletClient=useSetWalletClient();return{id:1,name:"MetaMask",connect:async()=>{if(setError(void 0),setWalletProvider("MetaMask"),"undefined"==typeof window||!window.ethereum)return console.log("No window.ethereum"),void setError(new Error("No window.ethereum found"));setConnecting(!0);try{const walletClient=(0,esm.Kwp)({chain:currentChain??chains.mainnet,transport:(0,esm.PGm)(window.ethereum)});setWalletClient(walletClient);const accounts=await walletClient.requestAddresses();setAddress(accounts),onClose?.()}catch(error){console.log("Error while connecting MetaMask",error),setError(error)}finally{setConnecting(!1)}}}};try{useMetaMaskWallet.displayName="useMetaMaskWallet",useMetaMaskWallet.__docgenInfo={description:"",displayName:"useMetaMaskWallet",props:{onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/Wallets/metaMaskWallet.tsx#useMetaMaskWallet"]={docgenInfo:useMetaMaskWallet.__docgenInfo,name:"useMetaMaskWallet",path:"package/src/components/Wallets/metaMaskWallet.tsx#useMetaMaskWallet"})}catch(__react_docgen_typescript_loader_error){}var index_es=__webpack_require__("./node_modules/.pnpm/@walletconnect+ethereum-provider@2.7.8_@web3modal+standalone@2.4.3_bufferutil@4.0.7_utf-8-validate@6.0.3/node_modules/@walletconnect/ethereum-provider/dist/index.es.js");const useWalletConnectWallet=({onClose})=>{const setWalletClient=useSetWalletClient(),setAddress=useSetAddress(),setConnecting=useSetWalletConnecting(),setError=useSetConnectWalletError(),setWalletProvider=useSetWalletProvider(),supportedChains=useSupportedChains(),currentChain=useCurrentChain();return{id:1,name:"WalletConnect",connect:async()=>{setConnecting(!0),setWalletProvider("WalletConnect");try{const provider=await index_es.Gn.init({chains:supportedChains.map((chain=>chain.id)),projectId:"5a13f1a5297da2cd768519079890e4fe",events:["chainChanged","accountsChanged"],methods:["eth_requestAccounts"],rpcMap:{1:"https://cloudflare-eth.com"},showQrModal:!0});provider.on("display_uri",(uri=>{console.log("URI: ",uri)})),await provider.connect();const walletClient=(0,esm.Kwp)({chain:currentChain??chains.mainnet,transport:(0,esm.PGm)(provider)});if(setWalletClient(walletClient),!walletClient)return;const accounts=await walletClient.requestAddresses();console.log(accounts),setAddress(accounts),onClose?.()}catch(error){console.log("Error while connecting WalletConnect",error),setError(error)}finally{setConnecting(!1)}}}};try{useWalletConnectWallet.displayName="useWalletConnectWallet",useWalletConnectWallet.__docgenInfo={description:"",displayName:"useWalletConnectWallet",props:{onClose:{defaultValue:null,description:"",name:"onClose",required:!1,type:{name:"(() => void)"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/Wallets/wallectConnectWallet.tsx#useWalletConnectWallet"]={docgenInfo:useWalletConnectWallet.__docgenInfo,name:"useWalletConnectWallet",path:"package/src/components/Wallets/wallectConnectWallet.tsx#useWalletConnectWallet"})}catch(__react_docgen_typescript_loader_error){}var Button=__webpack_require__("./package/src/components/ui/Button/Button.tsx"),Modal=__webpack_require__("./package/src/components/ui/Modal/Modal.tsx"),dist=__webpack_require__("./node_modules/.pnpm/@stitches+react@1.2.8_react@18.2.0/node_modules/@stitches/react/dist/index.mjs");const Container=(0,dist.zo)("div",{position:"relative",width:"10em",fontFamily:"Arial",minHeight:"1.5em",border:"0.05em solid #777",display:"flex",alignItems:"center",gap:"0.5em",padding:"0.5em 0.7em",borderRadius:"0.25em",outline:"none","&:focus":{outline:"0.15em solid #777",outlineOffset:"0.09em"},variants:{color:{dark:{backgroundColor:"#222122",color:"white",borderColor:"rgba(255,255,255,0.4)"},light:{backgroundColor:"#f9fdfe",color:"black"}}},defaultVariants:{color:"light"}}),Value=(0,dist.zo)("span",{flexGrow:1,display:"flex",gap:"0.5em",flexWrap:"wrap"}),ClearButton=(0,dist.zo)("button",{background:"none",color:"#777",border:"none",padding:0,outline:"none",cursor:"pointer",fontSize:"1.2em","&:focus":{color:"#333"},"&:hover":{color:"#333"}}),Divider=(0,dist.zo)("div",{backgroundColor:"#777",alignSelf:"stretch",width:"0.05em"}),Caret=(0,dist.zo)("div",{translate:"0 25%",border:"0.25em solid transparent",borderTopColor:"#777"}),Options=(0,dist.zo)("ul",{position:"absolute",margin:0,padding:"0.25em",listStyle:"none",display:"none",maxHeight:"15em",overflowY:"auto",border:"0.05em solid #777",borderRadius:"0.25em",width:"100%",left:0,top:"calc(100% + 0.35em)",backgroundColor:"white",zIndex:100,"&.show":{display:"block"},variants:{color:{dark:{backgroundColor:"#222122"},light:{backgroundColor:"#f9fdfe"}}},defaultVariants:{color:"light"}}),Option=(0,dist.zo)("li",{padding:"0.25em 0.5em",textAlign:"left",cursor:"pointer",borderRadius:"0.25em",display:"flex",gap:"0.5em",justifyContent:"flex-start",alignItems:"center",variants:{color:{dark:{"&.highlighted":{backgroundColor:"rgba(255, 255, 255, 0.3)",color:"white"}},light:{"&.highlighted":{backgroundColor:"rgba(0, 0, 255, 0.7)",color:"white"}}}},defaultVariants:{color:"light"}}),OptionBadge=(0,dist.zo)("button",{display:"flex",alignItems:"center",border:"0.05em solid #777",borderRadius:"0.25em",padding:"0.15em 0.25em",gap:"0.25em",cursor:"pointer",background:"none",outline:"none","&:hover":{"#RB":{color:"hsl(0, 100%, 50%)"}},"&:focus":{"#RB":{color:"hsl(0, 100%, 50%)"}},variants:{color:{dark:{color:"white","&:hover":{backgroundColor:"rgba(255, 255, 255, 0.3)",borderColor:"hsl(0, 100%, 50%)"},"&:focus":{backgroundColor:"rgba(255, 255, 255, 0.3)",borderColor:"hsl(0, 100%, 50%)"}},light:{color:"black","&:hover":{backgroundColor:"hsl(0, 100%, 90%)",borderColor:"hsl(0, 100%, 50%)"},"&:focus":{backgroundColor:"hsl(0, 100%, 90%)",borderColor:"hsl(0, 100%, 50%)"}}}}}),RemoveButton=(0,dist.zo)("span",{fontSize:"1.2em",color:"#777",marginTop:"0.1em"}),PulseContainer=(0,dist.zo)("div",{height:"0.5em",width:"0.5em",marginLeft:"auto",position:"relative"}),StaticPulse=(0,dist.zo)("div",{height:"100%",width:"100%",borderRadius:"999px",zIndex:"100",variants:{status:{pending:{backgroundColor:"yellow"},confirm:{backgroundColor:"green"}}}}),scaleUp=(0,dist.F4)({"0%, 50%":{transform:"scale(1)",opacity:"0"},"100%":{transform:"scale(1.5)",opacity:"1"}}),Pulse=(0,dist.zo)("div",{height:"100%",width:"100%",borderRadius:"999px",position:"absolute",top:"0",left:"0",zIndex:"99",animation:`${scaleUp} 1s ease-in-out alternate infinite`,variants:{status:{pending:{backgroundColor:"LightYellow"},confirm:{backgroundColor:"LightGreen"}}}}),PendingPulse=()=>(0,jsx_runtime.jsxs)(PulseContainer,{children:[(0,jsx_runtime.jsx)(StaticPulse,{status:"pending"}),(0,jsx_runtime.jsx)(Pulse,{status:"pending"})]});PendingPulse.displayName="PendingPulse";const ConfirmPulse=()=>(0,jsx_runtime.jsxs)(PulseContainer,{children:[(0,jsx_runtime.jsx)(StaticPulse,{status:"confirm"}),(0,jsx_runtime.jsx)(Pulse,{status:"confirm"})]});ConfirmPulse.displayName="ConfirmPulse";try{Container.displayName="Container",Container.__docgenInfo={description:"",displayName:"Container",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:'"dark" | "light" | ({ "@initial"?: "dark" | "light"; } & { [x: string]: "dark" | "light"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Container"]={docgenInfo:Container.__docgenInfo,name:"Container",path:"package/src/components/ui/Select/styles.tsx#Container"})}catch(__react_docgen_typescript_loader_error){}try{Value.displayName="Value",Value.__docgenInfo={description:"",displayName:"Value",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Value"]={docgenInfo:Value.__docgenInfo,name:"Value",path:"package/src/components/ui/Select/styles.tsx#Value"})}catch(__react_docgen_typescript_loader_error){}try{ClearButton.displayName="ClearButton",ClearButton.__docgenInfo={description:"",displayName:"ClearButton",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#ClearButton"]={docgenInfo:ClearButton.__docgenInfo,name:"ClearButton",path:"package/src/components/ui/Select/styles.tsx#ClearButton"})}catch(__react_docgen_typescript_loader_error){}try{Divider.displayName="Divider",Divider.__docgenInfo={description:"",displayName:"Divider",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Divider"]={docgenInfo:Divider.__docgenInfo,name:"Divider",path:"package/src/components/ui/Select/styles.tsx#Divider"})}catch(__react_docgen_typescript_loader_error){}try{Caret.displayName="Caret",Caret.__docgenInfo={description:"",displayName:"Caret",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Caret"]={docgenInfo:Caret.__docgenInfo,name:"Caret",path:"package/src/components/ui/Select/styles.tsx#Caret"})}catch(__react_docgen_typescript_loader_error){}try{Options.displayName="Options",Options.__docgenInfo={description:"",displayName:"Options",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLUListElement | null) => void) | RefObject<HTMLUListElement> | null"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:'"dark" | "light" | ({ "@initial"?: "dark" | "light"; } & { [x: string]: "dark" | "light"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Options"]={docgenInfo:Options.__docgenInfo,name:"Options",path:"package/src/components/ui/Select/styles.tsx#Options"})}catch(__react_docgen_typescript_loader_error){}try{Option.displayName="Option",Option.__docgenInfo={description:"",displayName:"Option",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLLIElement | null) => void) | RefObject<HTMLLIElement> | null"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:'"dark" | "light" | ({ "@initial"?: "dark" | "light"; } & { [x: string]: "dark" | "light"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Option"]={docgenInfo:Option.__docgenInfo,name:"Option",path:"package/src/components/ui/Select/styles.tsx#Option"})}catch(__react_docgen_typescript_loader_error){}try{OptionBadge.displayName="OptionBadge",OptionBadge.__docgenInfo={description:"",displayName:"OptionBadge",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:'"dark" | "light" | ({ "@initial"?: "dark" | "light"; } & { [x: string]: "dark" | "light"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#OptionBadge"]={docgenInfo:OptionBadge.__docgenInfo,name:"OptionBadge",path:"package/src/components/ui/Select/styles.tsx#OptionBadge"})}catch(__react_docgen_typescript_loader_error){}try{RemoveButton.displayName="RemoveButton",RemoveButton.__docgenInfo={description:"",displayName:"RemoveButton",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#RemoveButton"]={docgenInfo:RemoveButton.__docgenInfo,name:"RemoveButton",path:"package/src/components/ui/Select/styles.tsx#RemoveButton"})}catch(__react_docgen_typescript_loader_error){}try{PulseContainer.displayName="PulseContainer",PulseContainer.__docgenInfo={description:"",displayName:"PulseContainer",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#PulseContainer"]={docgenInfo:PulseContainer.__docgenInfo,name:"PulseContainer",path:"package/src/components/ui/Select/styles.tsx#PulseContainer"})}catch(__react_docgen_typescript_loader_error){}try{StaticPulse.displayName="StaticPulse",StaticPulse.__docgenInfo={description:"",displayName:"StaticPulse",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},status:{defaultValue:null,description:"",name:"status",required:!1,type:{name:'"pending" | "confirm" | ({ "@initial"?: "pending" | "confirm"; } & { [x: string]: "pending" | "confirm"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#StaticPulse"]={docgenInfo:StaticPulse.__docgenInfo,name:"StaticPulse",path:"package/src/components/ui/Select/styles.tsx#StaticPulse"})}catch(__react_docgen_typescript_loader_error){}try{Pulse.displayName="Pulse",Pulse.__docgenInfo={description:"",displayName:"Pulse",props:{ref:{defaultValue:null,description:"",name:"ref",required:!1,type:{name:"((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null"}},status:{defaultValue:null,description:"",name:"status",required:!1,type:{name:'"pending" | "confirm" | ({ "@initial"?: "pending" | "confirm"; } & { [x: string]: "pending" | "confirm"; }) | undefined'}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"undefined"}},css:{defaultValue:null,description:"",name:"css",required:!1,type:{name:"CSS<{}, {}, {}, {}>"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/styles.tsx#Pulse"]={docgenInfo:Pulse.__docgenInfo,name:"Pulse",path:"package/src/components/ui/Select/styles.tsx#Pulse"})}catch(__react_docgen_typescript_loader_error){}const ConnectButton=()=>{const[isOpen,setIsOpen]=(0,react.useState)(!1),status=(0,react.useContext)(AddressContext).status,address=(0,react.useContext)(AddressContext).address,connecting=(0,react.useContext)(AddressContext).connecting,walletProvider=(0,react.useContext)(AddressContext).walletProvider,disconnect=(0,react.useContext)(AddressContext).disconnectWallet,closeModal=()=>{console.log("closing modal"),setIsOpen(!1)},{name:metaMaskName,connect:connectMetamask}=useMetaMaskWallet({onClose:closeModal}),{name:walletConnectName,connect:connectWalletConnect}=useWalletConnectWallet({onClose:closeModal});return"connected"===status&&address?(console.log("address",address),(0,jsx_runtime.jsxs)("div",{children:[(0,jsx_runtime.jsxs)("div",{children:["Connected address: ",address]}),(0,jsx_runtime.jsx)(Button.z,{onClick:disconnect,children:"Disconnect"})]})):(0,jsx_runtime.jsxs)(jsx_runtime.Fragment,{children:[(0,jsx_runtime.jsx)(Button.z,{onClick:()=>{setIsOpen(!0)},children:"Connect Wallet"}),(0,jsx_runtime.jsxs)(Modal.u,{isOpen,onClose:closeModal,children:[(0,jsx_runtime.jsxs)(Button.z,{css:{display:"flex",alignItems:"center",gap:"0.5rem"},disabled:connecting,onClick:connectMetamask,children:[metaMaskName,connecting&&"MetaMask"===walletProvider&&(0,jsx_runtime.jsx)(PendingPulse,{})]}),(0,jsx_runtime.jsxs)(Button.z,{css:{display:"flex",alignItems:"center",gap:"0.5rem"},disabled:connecting,onClick:connectWalletConnect,children:[walletConnectName,connecting&&"WalletConnect"===walletProvider&&(0,jsx_runtime.jsx)(PendingPulse,{})]})]})]})};var chevron_down=__webpack_require__("./node_modules/.pnpm/lucide-react@0.233.0_react@18.2.0/node_modules/lucide-react/dist/esm/icons/chevron-down.js"),check=__webpack_require__("./node_modules/.pnpm/lucide-react@0.233.0_react@18.2.0/node_modules/lucide-react/dist/esm/icons/check.js");function Select({currentChain,switching,variant="light",value,onChange,options}){const[isOpen,setIsOpen]=(0,react.useState)(!1),[highlightedIndex,setHighlightedindex]=(0,react.useState)(0),containerRef=(0,react.useRef)(null),selectOption=(0,react.useCallback)((option=>{option!==value&&onChange(option)}),[onChange,value]);function isOptionSelected(option){return option===value}return(0,react.useEffect)((()=>{isOpen&&setHighlightedindex(0)}),[isOpen]),(0,react.useEffect)((()=>{const handler=e=>{if(e.target===containerRef.current)switch(e.code){case"Enter":case"Space":setIsOpen((prev=>!prev)),isOpen&&selectOption(options[highlightedIndex]);break;case"ArrowUp":case"ArrowDown":{if(!isOpen){setIsOpen(!0);break}const newValue=highlightedIndex+("ArrowDown"===e.code?1:-1);newValue>=0&&newValue<options.length&&setHighlightedindex(newValue);break}case"Escape":setIsOpen(!1)}},container=containerRef?.current;return container?.addEventListener("keydown",handler),()=>{container?.removeEventListener("keydown",handler)}}),[isOpen,highlightedIndex,options,selectOption]),(0,jsx_runtime.jsxs)(Container,{color:variant,ref:containerRef,onBlur:()=>setIsOpen(!1),onClick:()=>setIsOpen((prev=>!prev)),tabIndex:0,children:[currentChain&&options.includes(currentChain)?(0,jsx_runtime.jsx)(Value,{children:value?.name}):(0,jsx_runtime.jsx)(Value,{css:{color:"Red",borderColor:"Red"},children:"Wrong Network"}),(0,jsx_runtime.jsx)(chevron_down.Z,{size:20,style:{marginBottom:"0.05em"}}),(0,jsx_runtime.jsx)(Options,{color:variant,className:isOpen?"show":"",children:options.map(((option,index)=>(0,jsx_runtime.jsxs)(Option,{color:variant,onClick:e=>{e.stopPropagation(),selectOption(option),setIsOpen(!1)},onMouseEnter:()=>setHighlightedindex(index),className:index===highlightedIndex?"highlighted":"",children:[(0,jsx_runtime.jsx)("div",{children:(0,jsx_runtime.jsx)(check.Z,{style:{paddingTop:"0.25em"},size:15,opacity:isOptionSelected(option)?1:0})}),option.name,switching===option.id&&(0,jsx_runtime.jsx)(PendingPulse,{}),currentChain?.id===option.id&&(0,jsx_runtime.jsx)(ConfirmPulse,{})]},option.id)))})]})}Select.displayName="Select";try{Select.displayName="Select",Select.__docgenInfo={description:"",displayName:"Select",props:{currentChain:{defaultValue:null,description:"",name:"currentChain",required:!1,type:{name:"Chain"}},switching:{defaultValue:null,description:"",name:"switching",required:!1,type:{name:"number | null"}},value:{defaultValue:null,description:"",name:"value",required:!1,type:{name:"Chain"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(value: Chain) => void"}},variant:{defaultValue:{value:"light"},description:"",name:"variant",required:!1,type:{name:"enum",value:[{value:'"dark"'},{value:'"light"'}]}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"Chain[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["package/src/components/ui/Select/Select.tsx#Select"]={docgenInfo:Select.__docgenInfo,name:"Select",path:"package/src/components/ui/Select/Select.tsx#Select"})}catch(__react_docgen_typescript_loader_error){}const SwitchNetworks=()=>{const supportedChains=useSupportedChains(),{switchChain,switchingToChainId}=useSwitchChain(),currentChain=useCurrentChain(),isConnected=useIsConnected(),[value,setValue]=react.useState(currentChain??supportedChains[0]);(0,react.useEffect)((()=>{console.log("currentChain from switchNetwork: ",currentChain)}),[currentChain]);return(0,jsx_runtime.jsx)(Select,{variant:"light",currentChain,switching:switchingToChainId,value,onChange:async value=>{if(console.log("isConnected from switchNetwork: ",isConnected),!isConnected)return void alert("Please connect your wallet first");console.log("new chain value: ",value);const newChainId=await switchChain(+value.id);console.log({newChainId}),newChainId&&"number"==typeof newChainId&&setValue(value)},options:supportedChains})};SwitchNetworks.displayName="SwitchNetworks"},"?9b08":()=>{}}]);